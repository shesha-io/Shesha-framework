{
  "components": [
    {
      "id": "W_m7doMyCpCYwAYDfRh6I",
      "type": "collapsiblePanel",
      "propertyName": "pnlDisplay",
      "label": "Display",
      "labelAlign": "right",
      "parentId": "root",
      "hidden": false,
      "isDynamic": false,
      "version": 4,
      "expandIconPosition": "start",
      "header": {
        "id": "xUukOtoy4VF55EFvhr3t1",
        "components": []
      },
      "content": {
        "id": "s4gmBg31azZC0UjZjpfTm",
        "components": [
          {
            "id": "5c813b1a-04c5-4658-ac0f-cbcbae6b3bd4",
            "type": "contextPropertyAutocomplete",
            "propertyName": "propertyName",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Property name",
            "validate": {
              "required": true
            }
          },
          {
            "id": "46d07439-4c18-468c-89e1-60c002ce96c5",
            "type": "textField",
            "propertyName": "label",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Label",
            "version": 3,
            "textType": "text"
          },
          {
            "id": "8615d12f-6ea0-4b11-a1a1-6088c7160fd9",
            "type": "dropdown",
            "propertyName": "textType",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Type",
            "values": [
              {
                "label": "text",
                "value": "text",
                "id": "4f11403c-95fd-4e49-bb60-cb8c25f0f3c3"
              },
              {
                "label": "password",
                "value": "password",
                "id": "8f85c476-e632-4fa7-89ad-2be6cfb7f1f1"
              }
            ],
            "dataSourceType": "values",
            "version": 5,
            "referenceListId": null,
            "valueFormat": "listItem"
          },
          {
            "id": "57a40a33-7e08-4ce4-9f08-a34d24a83338",
            "type": "dropdown",
            "propertyName": "labelAlign",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Label align",
            "values": [
              {
                "label": "left",
                "value": "left",
                "id": "2d6411ae-0b56-4b4c-ad7c-fb15aa7fa1f5"
              },
              {
                "label": "right",
                "value": "right",
                "id": "9e89461b-f916-4689-8789-1854ccedc666"
              }
            ],
            "dataSourceType": "values",
            "version": 5,
            "referenceListId": null,
            "valueFormat": "listItem"
          },
          {
            "id": "fbdb6bb1-5994-4205-86b4-236ca61ae54e",
            "type": "textField",
            "propertyName": "placeholder",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Placeholder",
            "version": 3,
            "textType": "text"
          },
          {
            "id": "2d32fe70-99a0-4825-ae6c-8b933004e119",
            "type": "textArea",
            "propertyName": "description",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Description",
            "version": 2
          },
          {
            "id": "12d700d6-ed4d-49d5-9cfd-fe8f0060f3b6",
            "type": "textField",
            "propertyName": "prefix",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Prefix",
            "version": 3,
            "textType": "text"
          },
          {
            "id": "d68b1754-682c-4f2c-b49a-a1f250467474",
            "type": "textField",
            "propertyName": "suffix",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Suffix",
            "version": 3,
            "textType": "text"
          },
          {
            "id": "fbdb6bb1-5994-4205-86b4-236ca62ae54e",
            "type": "textField",
            "propertyName": "initialValue",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Default Value",
            "description": "Enter default value of component. (formData, formMode, globalState) are exposed",
            "version": 3,
            "textType": "text"
          },
          {
            "id": "0225b82d-19aa-47c7-b665-90508112bd23",
            "type": "checkbox",
            "propertyName": "passEmptyStringByDefault",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Empty as default",
            "description": "Whether the component should be initialized with an empty string",
            "version": 2
          },
          {
            "id": "cfd7d45e-c7e3-4a27-987b-dc525c412448",
            "type": "checkbox",
            "propertyName": "hidden",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Hidden",
            "version": 2
          },
          {
            "id": "c6885251-96a6-40ce-99b2-4b5209a9e01c",
            "type": "checkbox",
            "propertyName": "hideLabel",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Hide Label",
            "version": 2
          },
          {
            "id": "1ceb3851-f15e-437b-98b6-84d6a1fbf801",
            "type": "editModeSelector",
            "propertyName": "editMode",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "label": "Edit mode"
          },
          {
            "id": "c67b7404-d980-437a-a544-74e4e816f6cd",
            "type": "checkbox",
            "propertyName": "hideBorder",
            "label": "Hide border",
            "parentId": "s4gmBg31azZC0UjZjpfTm",
            "hidden": false,
            "validate": {},
            "version": 2
          }
        ]
      },
      "collapsible": "header",
      "ghost": true,
      "hideWhenEmpty": true,
      "settingsValidationErrors": []
    },
    {
      "id": "Cc47W08MWrKdhoGqFKMI2",
      "type": "collapsiblePanel",
      "propertyName": "pnlEvents",
      "label": "Events",
      "labelAlign": "right",
      "parentId": "root",
      "hidden": false,
      "isDynamic": false,
      "version": 4,
      "expandIconPosition": "start",
      "header": {
        "id": "pInxcBtp1lmax-jJORJLM",
        "components": []
      },
      "content": {
        "id": "Scip2BCqWk6HniFIJTgtA",
        "components": [
          {
            "id": "3cef348b-6bba-4176-93f6-f3a8b21e33c9",
            "type": "codeEditor",
            "propertyName": "onChangeCustom",
            "label": "On Change",
            "labelAlign": "right",
            "parentId": "Scip2BCqWk6HniFIJTgtA",
            "hidden": false,
            "description": "Enter custom eventhandler on changing of event. (form, event) are exposed",
            "validate": {},
            "settingsValidationErrors": [],
            "exposedVariables": [
              {
                "name": "data",
                "description": "Selected form values",
                "type": "object"
              },
              {
                "name": "event",
                "description": "Event callback when user input",
                "type": "object"
              },
              {
                "name": "form",
                "description": "Form instance",
                "type": "FormInstance"
              },
              {
                "name": "formMode",
                "description": "The form mode",
                "type": "'readonly' | 'edit' | 'designer'"
              },
              {
                "name": "globalState",
                "description": "The global state of the application",
                "type": "object"
              },
              {
                "name": "http",
                "description": "axios instance used to make http requests",
                "type": "object"
              },
              {
                "name": "message",
                "description": "This is the Ant API for displaying toast messages. See: https://ant.design/components/message/#header",
                "type": "object"
              },
              {
                "name": "moment",
                "description": "The moment.js object",
                "type": "object"
              },
              {
                "name": "setFormData",
                "description": "A function used to update the form data",
                "type": "({ values: object, mergeValues: boolean}) => void"
              },
              {
                "name": "setGlobalState",
                "description": "Setting the global state of the application",
                "type": "(payload: { key: string, data: any } ) => void"
              }
            ],
            "version": 3,
            "language": "typescript",
            "placeholder": "",
            "wrapInTemplate": true,
            "templateSettings": {
              "functionName": "onChange"
            },
            "availableConstantsExpression": "    return metadataBuilder\r\n        .addAllStandard(\"shesha:selectedRow\")\r\n        .addString(\"value\", \"Component current value\")\r\n        .addObject(\"event\", \"Event callback when user input\", undefined)\r\n        .build();"
          },
          {
            "id": "88c2d96c-b808-4316-8a36-701b09e5f6c7",
            "type": "codeEditor",
            "propertyName": "onFocusCustom",
            "label": "On Focus",
            "labelAlign": "right",
            "parentId": "Scip2BCqWk6HniFIJTgtA",
            "hidden": false,
            "description": "Enter custom eventhandler on focus of event. (form, event) are exposed",
            "validate": {},
            "settingsValidationErrors": [],
            "exposedVariables": [
              {
                "name": "data",
                "description": "Selected form values",
                "type": "object"
              },
              {
                "name": "event",
                "description": "Event callback when user input",
                "type": "object"
              },
              {
                "name": "form",
                "description": "Form instance",
                "type": "FormInstance"
              },
              {
                "name": "formMode",
                "description": "The form mode",
                "type": "'readonly' | 'edit' | 'designer'"
              },
              {
                "name": "globalState",
                "description": "The global state of the application",
                "type": "object"
              },
              {
                "name": "http",
                "description": "axios instance used to make http requests",
                "type": "object"
              },
              {
                "name": "message",
                "description": "This is the Ant API for displaying toast messages. See: https://ant.design/components/message/#header",
                "type": "object"
              },
              {
                "name": "moment",
                "description": "The moment.js object",
                "type": "object"
              },
              {
                "name": "setFormData",
                "description": "A function used to update the form data",
                "type": "({ values: object, mergeValues: boolean}) => void"
              }
            ],
            "version": 3,
            "language": "typescript",
            "placeholder": "",
            "wrapInTemplate": true,
            "templateSettings": {
              "functionName": "onFocus"
            },
            "availableConstantsExpression": "    return metadataBuilder\r\n        .addAllStandard(\"shesha:selectedRow\")\r\n        .addObject(\"event\", \"Event callback when user input\", undefined)\r\n        .build();"
          },
          {
            "id": "4a2b7329-1a89-45d1-a5b0-f66db21744b0",
            "type": "codeEditor",
            "propertyName": "onBlurCustom",
            "label": "On Blur",
            "labelAlign": "right",
            "parentId": "Scip2BCqWk6HniFIJTgtA",
            "hidden": false,
            "description": "Enter custom eventhandler on blur of event. (form, event) are exposed",
            "validate": {},
            "settingsValidationErrors": [],
            "exposedVariables": [
              {
                "name": "data",
                "description": "Selected form values",
                "type": "object"
              },
              {
                "name": "event",
                "description": "Event callback when user input",
                "type": "object"
              },
              {
                "name": "form",
                "description": "Form instance",
                "type": "FormInstance"
              },
              {
                "name": "formMode",
                "description": "The form mode",
                "type": "'readonly' | 'edit' | 'designer'"
              },
              {
                "name": "globalState",
                "description": "The global state of the application",
                "type": "object"
              },
              {
                "name": "http",
                "description": "axios instance used to make http requests",
                "type": "object"
              },
              {
                "name": "message",
                "description": "This is the Ant API for displaying toast messages. See: https://ant.design/components/message/#header",
                "type": "object"
              },
              {
                "name": "moment",
                "description": "The moment.js object",
                "type": "object"
              },
              {
                "name": "setFormData",
                "description": "A function used to update the form data",
                "type": "({ values: object, mergeValues: boolean}) => void"
              }
            ],
            "version": 3,
            "language": "typescript",
            "placeholder": "",
            "wrapInTemplate": true,
            "templateSettings": {
              "functionName": "onBlur"
            },
            "availableConstantsExpression": "    return metadataBuilder\r\n        .addAllStandard(\"shesha:selectedRow\")\r\n        .addObject(\"event\", \"Event callback when user input\", undefined)\r\n        .build();"
          }
        ]
      },
      "collapsible": "header",
      "ghost": true,
      "hideWhenEmpty": true,
      "settingsValidationErrors": []
    },
    {
      "id": "6eBJvoll3xtLJxdvOAlnB",
      "type": "collapsiblePanel",
      "propertyName": "pnlValidation",
      "label": "Validation",
      "labelAlign": "right",
      "parentId": "root",
      "hidden": false,
      "isDynamic": false,
      "version": 4,
      "expandIconPosition": "start",
      "header": {
        "id": "OHLCgLtLKni6NOhoSDcrD",
        "components": []
      },
      "content": {
        "id": "qOkkwAnHvKJ0vYXeXMLsd",
        "components": [
          {
            "id": "3be9da3f-f47e-48ae-b4c3-f5cc36e534d9",
            "type": "checkbox",
            "propertyName": "validate.required",
            "parentId": "qOkkwAnHvKJ0vYXeXMLsd",
            "label": "Required",
            "version": 2
          },
          {
            "id": "b61a1580-0ff9-460e-8f13-43b9d80ceb6c",
            "type": "numberField",
            "propertyName": "validate.minLength",
            "parentId": "qOkkwAnHvKJ0vYXeXMLsd",
            "label": "Min Length",
            "validate": {},
            "version": 2
          },
          {
            "id": "cc0d5dc1-19e6-42c3-bd5e-e63946a7f53c",
            "type": "numberField",
            "propertyName": "validate.maxLength",
            "parentId": "qOkkwAnHvKJ0vYXeXMLsd",
            "label": "Max Length",
            "validate": {},
            "version": 2
          },
          {
            "id": "9ee3a529-1f0c-4def-bd41-ee166a5dfcd7",
            "type": "textField",
            "propertyName": "validate.message",
            "parentId": "qOkkwAnHvKJ0vYXeXMLsd",
            "label": "Message",
            "validate": {},
            "version": 3,
            "textType": "text"
          },
          {
            "id": "22725416-3a3c-412c-8461-4c8d55e5c073",
            "type": "codeEditor",
            "propertyName": "validate.validator",
            "parentId": "qOkkwAnHvKJ0vYXeXMLsd",
            "label": "Validator",
            "validate": {},
            "labelAlign": "right",
            "hidden": false,
            "description": "Enter custom validator logic for form.item rules. Returns a Promise",
            "settingsValidationErrors": [],
            "exposedVariables": [
              {
                "propertyName": "rules",
                "description": "Validate rules, only support customize validator",
                "type": "object"
              },
              {
                "propertyName": "value",
                "description": "Component current value",
                "type": "object"
              },
              {
                "propertyName": "callback",
                "description": "Callback called by component",
                "type": "function"
              },
              {
                "propertyName": "data",
                "description": "Form values",
                "type": "object"
              }
            ],
            "version": 3,
            "language": "typescript",
            "placeholder": "",
            "wrapInTemplate": true,
            "templateSettings": {
              "functionName": "validator"
            },
            "availableConstantsExpression": "    return metadataBuilder\r\n        .addStandard([\"shesha:formData\"])\r\n        .addObject(\"rule\", \"Validate rules, only support customize validator\", undefined)\r\n        .addString(\"value\", \"Component current value\tobject\", undefined)\r\n        .addFunction(\"callback\", \"Callback called by component\", undefined)\r\n        .build();"
          }
        ]
      },
      "collapsible": "header",
      "ghost": true,
      "hideWhenEmpty": true,
      "settingsValidationErrors": []
    },
    {
      "id": "rZf26voxhs-HxJ5k5ngYE",
      "type": "collapsiblePanel",
      "propertyName": "pnlStyle",
      "label": "Style",
      "labelAlign": "right",
      "parentId": "root",
      "hidden": false,
      "isDynamic": false,
      "version": 4,
      "expandIconPosition": "start",
      "header": {
        "id": "q02MZmfdTZWgGC_eQfGaS",
        "components": []
      },
      "content": {
        "id": "RvNp_osTwoxjfKmj1mO9p",
        "components": [
          {
            "id": "06ab0599-914d-4d2d-875c-765a495472f8",
            "type": "codeEditor",
            "propertyName": "style",
            "label": "Style",
            "parentId": "RvNp_osTwoxjfKmj1mO9p",
            "validate": {},
            "settingsValidationErrors": [],
            "description": "A script that returns the style of the element as an object. This should conform to CSSProperties",
            "exposedVariables": [
              {
                "propertyName": "data",
                "description": "Form values",
                "type": "object"
              }
            ],
            "version": 3,
            "language": "typescript",
            "placeholder": "",
            "wrapInTemplate": true,
            "templateSettings": {
              "functionName": "getStyle"
            },
            "availableConstantsExpression": "    return metadataBuilder.addStandard([\"shesha:formData\", \"shesha:globalState\"]).build();"
          },
          {
            "id": "494e8079-98f6-4a25-b9fd-40a77554ec89",
            "type": "dropdown",
            "propertyName": "size",
            "parentId": "RvNp_osTwoxjfKmj1mO9p",
            "label": "Size",
            "allowClear": true,
            "values": [
              {
                "label": "Small",
                "value": "small",
                "id": "2f56ae38-e5f3-40ff-9830-bc048736ddb4"
              },
              {
                "label": "Middle",
                "value": "middle",
                "id": "470d820b-7cd7-439c-8e95-1f5b3134f80c"
              },
              {
                "label": "Large",
                "value": "large",
                "id": "1f2ac3db-3b3f-486c-991f-ad703088ab2d"
              }
            ],
            "dataSourceType": "values",
            "version": 5,
            "referenceListId": null,
            "valueFormat": "listItem"
          }
        ]
      },
      "collapsible": "header",
      "ghost": true,
      "hideWhenEmpty": true,
      "settingsValidationErrors": []
    }
  ],
  "formSettings": {
    "layout": "horizontal",
    "colon": true,
    "labelCol": {
      "span": 8
    },
    "wrapperCol": {
      "span": 16
    },
    "displayName": "DEFAULT_FORM_SETTINGS",
    "__docgenInfo": {
      "description": "Default form settings",
      "displayName": "DEFAULT_FORM_SETTINGS",
      "props": {}
    }
  }
}